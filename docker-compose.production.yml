version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ztask-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ztask_production
      POSTGRES_USER: ztask_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-ztask_secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - ztask-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ztask_user -d ztask_production"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: ztask-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - ztask-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # z-task Application
  app:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: ztask-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ztask_production
      DB_USER: ztask_user
      DB_PASSWORD: ${DB_PASSWORD:-ztask_secure_password}
      JWT_SECRET: ${JWT_SECRET:-your_super_secure_jwt_secret_key_change_this_in_production}
      REDIS_URL: redis://redis:6379
    ports:
      - "3000:3000"
    volumes:
      - ./logs:/app/logs
      - ./backups:/app/backups
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ztask-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ztask-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - ztask-network

  # Backup Service
  backup:
    image: postgres:15-alpine
    container_name: ztask-backup
    restart: "no"
    environment:
      PGPASSWORD: ${DB_PASSWORD:-ztask_secure_password}
    volumes:
      - ./backups:/backups
      - ./scripts:/scripts
    depends_on:
      - postgres
    networks:
      - ztask-network
    command: >
      sh -c "
        while true; do
          echo 'Starting backup...'
          pg_dump -h postgres -U ztask_user -d ztask_production > /backups/backup-$(date +%Y%m%d-%H%M%S).sql
          echo 'Backup completed'
          sleep 21600
        done
      "

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  ztask-network:
    driver: bridge
